2023-07-29 22:24:29,184 root INFO Namespace(input_file='Guacamol_100_mid_easy_to_solve', input_chunk_10_index=1, fnp_embedding_model_to_use='fnp_nn_0720_sampleInLoss_weightDecay_dropout_v2', gnn_embedding_model_to_use='gnn_0715_sampleInLoss_weightDecay_v2', limit_iterations=10000000000, limit_rxn_model_calls=5000, paroutes_n=5, limit_num_smiles=None, start_from_smiles_index_n=None, max_expansion_depth=20, max_num_templates=50, prevent_repeat_mol_in_trees=True, rxn_model='PAROUTES', inventory='PAROUTES', sample_percent_inventory=1, and_node_cost_fn='PAROUTES', or_node_cost_fn='MOL_PURCHASABLE', stop_on_first_solution=True, reduce_value_function_calls=True, retro_star_model_to_use='RetroStar_savedModels/best_epoch_final_4.pt')
2023-07-29 22:24:31,011 h5py._conv DEBUG Creating converter from 3 to 5
2023-07-29 22:24:33,579 root INFO Start experiment MID_EASY_v3_ReduceCalls
2023-07-29 22:24:33,579 root INFO Args: 
and_node_cost_fn: PAROUTES
fnp_embedding_model_to_use: fnp_nn_0720_sampleInLoss_weightDecay_dropout_v2
gnn_embedding_model_to_use: gnn_0715_sampleInLoss_weightDecay_v2
input_chunk_10_index: 1
input_file: Guacamol_100_mid_easy_to_solve
inventory: PAROUTES
limit_iterations: 10000000000
limit_num_smiles: None
limit_rxn_model_calls: 5000
max_expansion_depth: 20
max_num_templates: 50
or_node_cost_fn: MOL_PURCHASABLE
paroutes_n: 5
prevent_repeat_mol_in_trees: True
reduce_value_function_calls: True
retro_star_model_to_use: RetroStar_savedModels/best_epoch_final_4.pt
rxn_model: PAROUTES
sample_percent_inventory: 1
start_from_smiles_index_n: None
stop_on_first_solution: True
2023-07-29 22:24:33,579 root INFO dim_test: 10
2023-07-29 22:24:33,579 root INFO Start search with Tanimoto-distance-TIMES100
2023-07-29 22:24:33,580 root DEBUG Start search 0/10. SMILES: Cc1nc(NC2CCCC2)c2nn(C)c(-c3ccc(Cl)cc3Cl)c2n1
2023-07-29 22:24:40,056 root DEBUG Start search 1/10. SMILES: C#CC(CC(=O)O)NC(=O)Cn1ccc2ccc(N3CCNCC3)cc2c1=O
2023-07-29 22:25:13,396 root DEBUG Start search 2/10. SMILES: O=c1c(C=NNc2nc(N3CCOCC3)c3ccsc3n2)coc2ccccc12
2023-07-29 22:25:17,169 root DEBUG Start search 3/10. SMILES: O=C(NC1CCCCC1)C1Cc2c(sc3ccccc23)CN1
2023-07-29 22:25:27,230 root DEBUG Start search 4/10. SMILES: O=C1CSC(C23CC4CC(CC(C4)C2)C3)N1CCN1CCCCC1
2023-07-29 22:25:32,247 root DEBUG Start search 5/10. SMILES: O=C1c2cccc3cccc(c23)C(=O)N1CCN1CCN(CC(O)COCc2ccc(Cl)cc2)CC1
2023-07-29 22:25:38,422 root DEBUG Start search 6/10. SMILES: COc1ccc2oc(NC3CCN(Cc4ccccc4)CC3)cc(=O)c2c1
2023-07-29 22:25:40,167 root DEBUG Start search 7/10. SMILES: Fc1cccc(CN2CCC(COc3nc4ccsc4n4cccc34)CC2)c1
2023-07-29 22:26:50,230 root DEBUG Start search 8/10. SMILES: COCc1ccccc1C1C(C(=O)C(C)(C)C)C(=O)C(=O)N1c1ccc(-c2noc(C)n2)cc1
2023-07-29 22:27:08,851 root DEBUG Start search 9/10. SMILES: CN(C(=O)c1ccccc1OC(F)(F)F)C1COc2nc([N+](=O)[O-])cn2C1
