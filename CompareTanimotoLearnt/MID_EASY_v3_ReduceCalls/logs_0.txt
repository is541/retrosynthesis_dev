2023-07-29 19:46:05,363 root INFO Namespace(input_file='Guacamol_100_mid_easy_to_solve', input_chunk_10_index=0, fnp_embedding_model_to_use='fnp_nn_0720_sampleInLoss_weightDecay_dropout_v2', gnn_embedding_model_to_use='gnn_0715_sampleInLoss_weightDecay_v2', limit_iterations=10000000000, limit_rxn_model_calls=5000, paroutes_n=5, limit_num_smiles=None, start_from_smiles_index_n=None, max_expansion_depth=20, max_num_templates=50, prevent_repeat_mol_in_trees=True, rxn_model='PAROUTES', inventory='PAROUTES', sample_percent_inventory=1, and_node_cost_fn='PAROUTES', or_node_cost_fn='MOL_PURCHASABLE', stop_on_first_solution=True, reduce_value_function_calls=True, retro_star_model_to_use='RetroStar_savedModels/best_epoch_final_4.pt')
2023-07-29 19:46:07,251 h5py._conv DEBUG Creating converter from 3 to 5
2023-07-29 19:47:02,618 root INFO Start experiment MID_EASY_v3_ReduceCalls
2023-07-29 19:47:02,618 root INFO Args: 
and_node_cost_fn: PAROUTES
fnp_embedding_model_to_use: fnp_nn_0720_sampleInLoss_weightDecay_dropout_v2
gnn_embedding_model_to_use: gnn_0715_sampleInLoss_weightDecay_v2
input_chunk_10_index: 0
input_file: Guacamol_100_mid_easy_to_solve
inventory: PAROUTES
limit_iterations: 10000000000
limit_num_smiles: None
limit_rxn_model_calls: 5000
max_expansion_depth: 20
max_num_templates: 50
or_node_cost_fn: MOL_PURCHASABLE
paroutes_n: 5
prevent_repeat_mol_in_trees: True
reduce_value_function_calls: True
retro_star_model_to_use: RetroStar_savedModels/best_epoch_final_4.pt
rxn_model: PAROUTES
sample_percent_inventory: 1
start_from_smiles_index_n: None
stop_on_first_solution: True
2023-07-29 19:47:02,618 root INFO dim_test: 10
2023-07-29 19:47:02,618 root INFO Start search with Embedding-from-fingerprints-TIMES100
2023-07-29 19:47:02,619 root DEBUG Start search 0/10. SMILES: CCOc1ccc(N(CC(=O)NC2CCCCC2)C(=O)CCCC(=O)Nc2ccccn2)cc1
2023-07-29 19:53:47,682 root DEBUG Start search 1/10. SMILES: CN1CCC(=C2c3ccccc3Oc3ccc(Cl)cc32)CC1
2023-07-29 19:59:11,167 root DEBUG Start search 2/10. SMILES: COc1cc(O)c2c(=O)cc(-c3cc(O)c(O)cc3Cc3cccc(Cl)c3)oc2c1
2023-07-29 20:04:41,568 root DEBUG Start search 3/10. SMILES: N#CCCCSC(=S)n1ccnc1
2023-07-29 20:56:45,333 root DEBUG Start search 4/10. SMILES: CSC(=O)C#CC(C)(C)N(C)Cc1ccccc1
2023-07-29 20:57:06,486 root DEBUG Start search 5/10. SMILES: CC(=O)Nc1nc(C)c(-c2nc(C(C)(C)CCO)no2)s1
2023-07-29 20:57:40,365 root DEBUG Start search 6/10. SMILES: NC(=O)C(CCC(F)(F)F)N(CCc1ncon1)S(=O)(=O)c1ccc(Cl)cc1
2023-07-29 20:58:32,616 root DEBUG Start search 7/10. SMILES: NCC(=O)N1CC(N)CC1C(=O)NC(CCc1ccccc1)C(=O)Nc1ccc2ncccc2c1
2023-07-29 21:02:06,268 root DEBUG Start search 8/10. SMILES: CCN(CC)C(=O)c1ccc(N(c2cccc(OC)c2)C2CCN(CC=C(C)C)CC2C)cc1
2023-07-29 21:02:20,245 root DEBUG Start search 9/10. SMILES: N=C(N)NCCCC(NC(=O)CN1CCN(S(=O)(=O)c2ccc(-c3ccccn3)s2)CC1=O)C(=O)c1nccs1
